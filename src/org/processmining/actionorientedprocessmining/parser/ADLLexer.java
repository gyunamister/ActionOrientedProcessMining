package org.processmining.actionorientedprocessmining.parser;
import org.antlr.v4.runtime.CharStream;
// Generated from ADL.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.RuntimeMetaData;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.atn.ATNDeserializer;
import org.antlr.v4.runtime.atn.LexerATNSimulator;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ADLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__7=1, T__6=2, T__5=3, T__4=4, T__3=5, T__2=6, T__1=7, T__0=8, VARIABLE_NAME=9, 
		STRING=10, NUMBER=11, DEFINE=12, AS=13, VIEW=14, ASSESS=15, OPERATION=16, 
		PARAMETER=17, ACQUIRED_BY=18, IN=19, LP=20, RP=21, LB=22, RB=23, LSB=24, 
		RSB=25, LTB=26, RTB=27, DQ=28, SEP=29, ASSIGN=30, TILDE=31, NOT=32, AND=33, 
		OR=34, TRUE=35, FALSE=36, OCCUR=37, NEXT=38, EVENTUALLY=39, WS=40;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('"
	};
	public static final String[] ruleNames = {
		"T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "VARIABLE_NAME", 
		"STRING", "ESC", "UNICODE", "HEX", "NUMBER", "INT", "EXP", "DEFINE", "AS", 
		"VIEW", "ASSESS", "OPERATION", "PARAMETER", "ACQUIRED_BY", "IN", "LP", 
		"RP", "LB", "RB", "LSB", "RSB", "LTB", "RTB", "DQ", "SEP", "ASSIGN", "TILDE", 
		"NOT", "AND", "OR", "TRUE", "FALSE", "OCCUR", "NEXT", "EVENTUALLY", "WS"
	};


	public ADLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "ADL.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2*\u013e\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3"+
		"\5\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\7\n"+
		"|\n\n\f\n\16\n\177\13\n\3\13\3\13\3\13\7\13\u0084\n\13\f\13\16\13\u0087"+
		"\13\13\3\13\3\13\3\f\3\f\3\f\5\f\u008e\n\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16"+
		"\3\16\3\17\5\17\u0099\n\17\3\17\3\17\3\17\6\17\u009e\n\17\r\17\16\17\u009f"+
		"\3\17\5\17\u00a3\n\17\3\17\5\17\u00a6\n\17\3\17\5\17\u00a9\n\17\3\20\3"+
		"\20\3\20\7\20\u00ae\n\20\f\20\16\20\u00b1\13\20\5\20\u00b3\n\20\3\21\3"+
		"\21\5\21\u00b7\n\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23"+
		"\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35"+
		"\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&"+
		"\3&\3&\3\'\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3+\3"+
		"+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3.\6.\u0139"+
		"\n.\r.\16.\u013a\3.\3.\2\2/\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25"+
		"\f\27\2\31\2\33\2\35\r\37\2!\2#\16%\17\'\20)\21+\22-\23/\24\61\25\63\26"+
		"\65\27\67\309\31;\32=\33?\34A\35C\36E\37G I!K\"M#O$Q%S&U\'W(Y)[*\3\2\f"+
		"\4\2aac|\5\2\62;aac|\4\2$$^^\n\2$$\61\61^^ddhhppttvv\5\2\62;CHch\3\2\62"+
		";\3\2\63;\4\2GGgg\4\2--//\5\2\13\f\17\17\"\"\u0145\2\3\3\2\2\2\2\5\3\2"+
		"\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21"+
		"\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\35\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2"+
		"\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2"+
		"\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2"+
		"\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2"+
		"K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3"+
		"\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\3]\3\2\2\2\5a\3\2\2\2\7d\3\2\2\2\tf\3\2\2"+
		"\2\13k\3\2\2\2\rn\3\2\2\2\17r\3\2\2\2\21t\3\2\2\2\23y\3\2\2\2\25\u0080"+
		"\3\2\2\2\27\u008a\3\2\2\2\31\u008f\3\2\2\2\33\u0095\3\2\2\2\35\u00a8\3"+
		"\2\2\2\37\u00b2\3\2\2\2!\u00b4\3\2\2\2#\u00ba\3\2\2\2%\u00c1\3\2\2\2\'"+
		"\u00c4\3\2\2\2)\u00c9\3\2\2\2+\u00d0\3\2\2\2-\u00da\3\2\2\2/\u00e4\3\2"+
		"\2\2\61\u00f0\3\2\2\2\63\u00f3\3\2\2\2\65\u00f5\3\2\2\2\67\u00f7\3\2\2"+
		"\29\u00f9\3\2\2\2;\u00fb\3\2\2\2=\u00fd\3\2\2\2?\u00ff\3\2\2\2A\u0101"+
		"\3\2\2\2C\u0103\3\2\2\2E\u0105\3\2\2\2G\u0107\3\2\2\2I\u0109\3\2\2\2K"+
		"\u010b\3\2\2\2M\u010f\3\2\2\2O\u0113\3\2\2\2Q\u0116\3\2\2\2S\u011b\3\2"+
		"\2\2U\u0121\3\2\2\2W\u0127\3\2\2\2Y\u012c\3\2\2\2[\u0138\3\2\2\2]^\7c"+
		"\2\2^_\7e\2\2_`\7v\2\2`\4\3\2\2\2ab\7e\2\2bc\7h\2\2c\6\3\2\2\2de\7(\2"+
		"\2e\b\3\2\2\2fg\7r\2\2gh\7t\2\2hi\7q\2\2ij\7e\2\2j\n\3\2\2\2kl\7r\2\2"+
		"lm\7k\2\2m\f\3\2\2\2no\7t\2\2op\7g\2\2pq\7u\2\2q\16\3\2\2\2rs\7=\2\2s"+
		"\20\3\2\2\2tu\7v\2\2uv\7k\2\2vw\7o\2\2wx\7g\2\2x\22\3\2\2\2y}\t\2\2\2"+
		"z|\t\3\2\2{z\3\2\2\2|\177\3\2\2\2}{\3\2\2\2}~\3\2\2\2~\24\3\2\2\2\177"+
		"}\3\2\2\2\u0080\u0085\7$\2\2\u0081\u0084\5\27\f\2\u0082\u0084\n\4\2\2"+
		"\u0083\u0081\3\2\2\2\u0083\u0082\3\2\2\2\u0084\u0087\3\2\2\2\u0085\u0083"+
		"\3\2\2\2\u0085\u0086\3\2\2\2\u0086\u0088\3\2\2\2\u0087\u0085\3\2\2\2\u0088"+
		"\u0089\7$\2\2\u0089\26\3\2\2\2\u008a\u008d\7^\2\2\u008b\u008e\t\5\2\2"+
		"\u008c\u008e\5\31\r\2\u008d\u008b\3\2\2\2\u008d\u008c\3\2\2\2\u008e\30"+
		"\3\2\2\2\u008f\u0090\7w\2\2\u0090\u0091\5\33\16\2\u0091\u0092\5\33\16"+
		"\2\u0092\u0093\5\33\16\2\u0093\u0094\5\33\16\2\u0094\32\3\2\2\2\u0095"+
		"\u0096\t\6\2\2\u0096\34\3\2\2\2\u0097\u0099\7/\2\2\u0098\u0097\3\2\2\2"+
		"\u0098\u0099\3\2\2\2\u0099\u009a\3\2\2\2\u009a\u009b\5\37\20\2\u009b\u009d"+
		"\7\60\2\2\u009c\u009e\t\7\2\2\u009d\u009c\3\2\2\2\u009e\u009f\3\2\2\2"+
		"\u009f\u009d\3\2\2\2\u009f\u00a0\3\2\2\2\u00a0\u00a2\3\2\2\2\u00a1\u00a3"+
		"\5!\21\2\u00a2\u00a1\3\2\2\2\u00a2\u00a3\3\2\2\2\u00a3\u00a9\3\2\2\2\u00a4"+
		"\u00a6\7/\2\2\u00a5\u00a4\3\2\2\2\u00a5\u00a6\3\2\2\2\u00a6\u00a7\3\2"+
		"\2\2\u00a7\u00a9\5\37\20\2\u00a8\u0098\3\2\2\2\u00a8\u00a5\3\2\2\2\u00a9"+
		"\36\3\2\2\2\u00aa\u00b3\7\62\2\2\u00ab\u00af\t\b\2\2\u00ac\u00ae\t\7\2"+
		"\2\u00ad\u00ac\3\2\2\2\u00ae\u00b1\3\2\2\2\u00af\u00ad\3\2\2\2\u00af\u00b0"+
		"\3\2\2\2\u00b0\u00b3\3\2\2\2\u00b1\u00af\3\2\2\2\u00b2\u00aa\3\2\2\2\u00b2"+
		"\u00ab\3\2\2\2\u00b3 \3\2\2\2\u00b4\u00b6\t\t\2\2\u00b5\u00b7\t\n\2\2"+
		"\u00b6\u00b5\3\2\2\2\u00b6\u00b7\3\2\2\2\u00b7\u00b8\3\2\2\2\u00b8\u00b9"+
		"\5\37\20\2\u00b9\"\3\2\2\2\u00ba\u00bb\7F\2\2\u00bb\u00bc\7G\2\2\u00bc"+
		"\u00bd\7H\2\2\u00bd\u00be\7K\2\2\u00be\u00bf\7P\2\2\u00bf\u00c0\7G\2\2"+
		"\u00c0$\3\2\2\2\u00c1\u00c2\7C\2\2\u00c2\u00c3\7U\2\2\u00c3&\3\2\2\2\u00c4"+
		"\u00c5\7X\2\2\u00c5\u00c6\7K\2\2\u00c6\u00c7\7G\2\2\u00c7\u00c8\7Y\2\2"+
		"\u00c8(\3\2\2\2\u00c9\u00ca\7C\2\2\u00ca\u00cb\7U\2\2\u00cb\u00cc\7U\2"+
		"\2\u00cc\u00cd\7G\2\2\u00cd\u00ce\7U\2\2\u00ce\u00cf\7U\2\2\u00cf*\3\2"+
		"\2\2\u00d0\u00d1\7Q\2\2\u00d1\u00d2\7R\2\2\u00d2\u00d3\7G\2\2\u00d3\u00d4"+
		"\7T\2\2\u00d4\u00d5\7C\2\2\u00d5\u00d6\7V\2\2\u00d6\u00d7\7K\2\2\u00d7"+
		"\u00d8\7Q\2\2\u00d8\u00d9\7P\2\2\u00d9,\3\2\2\2\u00da\u00db\7R\2\2\u00db"+
		"\u00dc\7C\2\2\u00dc\u00dd\7T\2\2\u00dd\u00de\7C\2\2\u00de\u00df\7O\2\2"+
		"\u00df\u00e0\7G\2\2\u00e0\u00e1\7V\2\2\u00e1\u00e2\7G\2\2\u00e2\u00e3"+
		"\7T\2\2\u00e3.\3\2\2\2\u00e4\u00e5\7C\2\2\u00e5\u00e6\7E\2\2\u00e6\u00e7"+
		"\7S\2\2\u00e7\u00e8\7W\2\2\u00e8\u00e9\7K\2\2\u00e9\u00ea\7T\2\2\u00ea"+
		"\u00eb\7G\2\2\u00eb\u00ec\7F\2\2\u00ec\u00ed\7\"\2\2\u00ed\u00ee\7D\2"+
		"\2\u00ee\u00ef\7[\2\2\u00ef\60\3\2\2\2\u00f0\u00f1\7K\2\2\u00f1\u00f2"+
		"\7P\2\2\u00f2\62\3\2\2\2\u00f3\u00f4\7*\2\2\u00f4\64\3\2\2\2\u00f5\u00f6"+
		"\7+\2\2\u00f6\66\3\2\2\2\u00f7\u00f8\7}\2\2\u00f88\3\2\2\2\u00f9\u00fa"+
		"\7\177\2\2\u00fa:\3\2\2\2\u00fb\u00fc\7]\2\2\u00fc<\3\2\2\2\u00fd\u00fe"+
		"\7_\2\2\u00fe>\3\2\2\2\u00ff\u0100\7>\2\2\u0100@\3\2\2\2\u0101\u0102\7"+
		"@\2\2\u0102B\3\2\2\2\u0103\u0104\7$\2\2\u0104D\3\2\2\2\u0105\u0106\7."+
		"\2\2\u0106F\3\2\2\2\u0107\u0108\7?\2\2\u0108H\3\2\2\2\u0109\u010a\7\u0080"+
		"\2\2\u010aJ\3\2\2\2\u010b\u010c\7P\2\2\u010c\u010d\7Q\2\2\u010d\u010e"+
		"\7V\2\2\u010eL\3\2\2\2\u010f\u0110\7C\2\2\u0110\u0111\7P\2\2\u0111\u0112"+
		"\7F\2\2\u0112N\3\2\2\2\u0113\u0114\7Q\2\2\u0114\u0115\7T\2\2\u0115P\3"+
		"\2\2\2\u0116\u0117\7V\2\2\u0117\u0118\7T\2\2\u0118\u0119\7W\2\2\u0119"+
		"\u011a\7G\2\2\u011aR\3\2\2\2\u011b\u011c\7H\2\2\u011c\u011d\7C\2\2\u011d"+
		"\u011e\7N\2\2\u011e\u011f\7U\2\2\u011f\u0120\7G\2\2\u0120T\3\2\2\2\u0121"+
		"\u0122\7Q\2\2\u0122\u0123\7E\2\2\u0123\u0124\7E\2\2\u0124\u0125\7W\2\2"+
		"\u0125\u0126\7T\2\2\u0126V\3\2\2\2\u0127\u0128\7P\2\2\u0128\u0129\7G\2"+
		"\2\u0129\u012a\7Z\2\2\u012a\u012b\7V\2\2\u012bX\3\2\2\2\u012c\u012d\7"+
		"G\2\2\u012d\u012e\7X\2\2\u012e\u012f\7G\2\2\u012f\u0130\7P\2\2\u0130\u0131"+
		"\7V\2\2\u0131\u0132\7W\2\2\u0132\u0133\7C\2\2\u0133\u0134\7N\2\2\u0134"+
		"\u0135\7N\2\2\u0135\u0136\7[\2\2\u0136Z\3\2\2\2\u0137\u0139\t\13\2\2\u0138"+
		"\u0137\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u0138\3\2\2\2\u013a\u013b\3\2"+
		"\2\2\u013b\u013c\3\2\2\2\u013c\u013d\b.\2\2\u013d\\\3\2\2\2\20\2}\u0083"+
		"\u0085\u008d\u0098\u009f\u00a2\u00a5\u00a8\u00af\u00b2\u00b6\u013a\3\b"+
		"\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}